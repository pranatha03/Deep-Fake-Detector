import os
import torch
import torchvision.transforms as transforms
from PIL import Image


input_folder = "resized_frames"  # Change if needed
output_folder = "normalized_frames"


os.makedirs(output_folder, exist_ok=True)


transform = transforms.Compose([
    transforms.ToTensor(),  # Converts image to tensor (0-255 → 0-1)
])


for img_name in os.listdir(input_folder):
    img_path = os.path.join(input_folder, img_name)

    try:
        
        img = Image.open(img_path).convert("RGB")
        img_tensor = transform(img)

     
        save_path = os.path.join(output_folder, img_name)
        transforms.ToPILImage()(img_tensor).save(save_path)

        print(f"✅ Normalized & saved: {img_name}")

    except Exception as e:
        print(f"❌ Error processing {img_name}: {e}")

print(f"🎉 Normalization complete! {len(os.listdir(output_folder))} images saved in '{output_folder}' folder.")
